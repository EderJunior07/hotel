import React, { useEffect } from 'react';
import Head from 'next/head';
import styles from './search.module.scss';
import { HotelOutlined, AttractionsOutlined } from '@mui/icons-material';
import CardRoom from '../../components/CardRoom';
import { useRouter } from 'next/router';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import { GetServerSideProps } from 'next';
import { URLSearchParams } from 'url';
import Header from '../../components/Header';
import { useTranslation } from 'next-i18next';
import Footer from '../../components/common/Footer';

const Search = ({ searchResult, officeDetails, design }: any) => {
  const router = useRouter();

  const { t } = useTranslation('common');


  return (
    <>
      <Head>
        <title>Hotel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header design={design} placeholder={t('YOUR-HOSTING')} />
        <section className={styles.filterInfo}>
          <div style={{ flex: 1, paddingTop: 1 }}>
            <h2>
              <span>{`${
                searchResult?.length < 10 && searchResult.length > 0 ? '0' : ''
              }${searchResult.length}`}</span>{' '}
              quartos com <span>06</span> serviços foram encontrados
            </h2>
          </div>
          <div className={styles.filtersMobileSection}>
            <div
              style={{
                borderBottom: '6px solid black',
              }}
              className={styles.filterButtonContainer}
            >
              <HotelOutlined style={{ marginBottom: '0.2rem' }} />
              <h4>Quartos</h4>
            </div>
            <div
              style={{ opacity: 0.35, paddingBottom: '1.4rem' }}
              className={styles.filterButtonContainer}
            >
              <AttractionsOutlined style={{ marginBottom: '0.2rem' }} />
              <h4>Serviços</h4>
            </div>
          </div>
        </section>
        <section className={styles.contentResultContainer}>
          {/* {!!searchResult && searchResult?.map((room, index) => (
            <CardRoom key={index} room={room} />
          ))} */}
        </section>

        <Footer officeDetails={officeDetails} />
      </main>
    </>
  );
};

export default Search;

export const getServerSideProps: GetServerSideProps = async ({
  locale,
  query,
}) => {
  const base_url = 'http://book.hospeda.in';

  const { startDate, endDate, adults, children }: any = query;

  try {
    const officeDetails = await fetch(base_url + '/offices/office1').then(
      (response) => response.json()
    );

    const design = await fetch(base_url + '/offices/office1/design').then(
      (response) => response.json()
    );

    const searchResult = await fetch(
      base_url +
        '/booking/room-search/?' +
        new URLSearchParams({
          officeId: 'office1',
          startDate,
          endDate,
          adults,
          children,
        })
    ).then((response) => response.json());

    return {
      props: {
        searchResult: searchResult || [],
        officeDetails,
        design,
        ...(await serverSideTranslations(locale, ['common'])),
      },
    };
  } catch (error) {
    console.log('ERRO', error);

    return {
      props: {
        searchResult: [],
        ...(await serverSideTranslations(locale, ['common'])),
      },
    };
  }
};
