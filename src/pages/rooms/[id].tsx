import React, { useState } from 'react';
import styles from './styles.module.scss';

import { ChevronLeft } from 'react-feather';
import BedOutlinedIcon from '@mui/icons-material/BedOutlined';
import SingleBedOutlinedIcon from '@mui/icons-material/SingleBedOutlined';
import PersonOutlinedIcon from '@mui/icons-material/PersonOutlined';
import { AppsOutlined } from '@mui/icons-material';
import Head from 'next/head';
import CardService from '../../components/CardService';
import CarouselHolder from '../../components/common/CarouselHolder';
import { GetStaticPaths, GetStaticProps } from 'next';
import { OfficeDetails } from '../../../data/officeDetails';
import Header from '../../components/Header';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import moment from 'moment';
import { Design } from '../../../data/design';
import { useTranslation } from 'next-i18next';
import { useWindowSize } from '../../hooks/UseWindowSize';

import Footer from '../../components/common/Footer';
import OffersRoomModal from '../../components/OffersRoomModal';
import OffersAccordion from '../../components/OffersAccordion';
import { useRouter } from 'next/router';
import { mockSearchResults } from '../../../mock/mockSearchResult';
import { AmenitieDisplay } from '../../components/common/AmenitieDisplay';
import { motion } from 'framer-motion';

interface IRoomDetailsProps {
  officeDetails: OfficeDetails;
  design: Design;
  servicesResult: any;
  searchResult: any;
}

const RoomDetails = (props: IRoomDetailsProps) => {
  const { t } = useTranslation('common');
  const [openOffersModal, setOpenOffersModal] = useState(false);
  const [showMoreDescription, setShowMoreDescription] = useState(false);

  const handleOpenMobileOffersModal = () => {
    if (document.body.style.overflow === 'hidden') {
      setOpenOffersModal(false);
      document.body.style.overflow = 'initial';
    } else {
      document.body.style.overflow = 'hidden';
      setOpenOffersModal(true);
    }
  };
  const router = useRouter();
  // Window Sizes
  const size = useWindowSize();

  const currentRoom = mockSearchResults[0];

  return (
    <>
      <Head>
        <title>Hotel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header design={props.design} />

      <main className={styles.mainBox}>
        <div className={styles.btnGoBackDesk}>
          <ChevronLeft width={18} height={18} />
        </div>

        <div className={styles.contentBox}>
          {size.width < 868 && (
            <div onClick={() => router.back()} className={styles.btnGoBack}>
              <ChevronLeft width={18} height={18} />
            </div>
          )}

          <div className={styles.carouselContainer}>
            <CarouselHolder data={imageData} />
          </div>

          <div className={styles.imgsBox}>
            <div
              className={styles.imgLeftSide}
              style={{
                backgroundImage: `url('https://images.unsplash.com/photo-1631049307264-da0ec9d70304?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80')`,
              }}
            ></div>
            <div className={styles.imgRightSide}>
              <div
                className={styles.secondImgBox}
                style={{
                  backgroundImage: `url('https://images.unsplash.com/photo-1591088398332-8a7791972843?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80')`,
                }}
              ></div>
              <div
                className={styles.thirdImgBox}
                style={{
                  backgroundImage: `url('https://images.unsplash.com/photo-1540518614846-7eded433c457?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1157&q=80')`,
                }}
              >
                <div className={styles.allButton}>
                  <AppsOutlined fontSize={'small'} style={{ color: '#000' }} />
                  <p>{t('showAllPhotos')}</p>
                </div>
              </div>
            </div>
          </div>

          <div className={styles.content}>
            <div className={styles.infoBox}>
              <div className={styles.iconsContainerHolder}>
                <div className={styles.iconWithNumberContainer}>
                  <BedOutlinedIcon fontSize={'small'} />
                  <h5>3</h5>
                </div>
                <div className={styles.iconWithNumberContainer}>
                  <SingleBedOutlinedIcon fontSize={'small'} />
                  <h5>1</h5>
                </div>
                <div className={styles.iconWithNumberContainer}>
                  <PersonOutlinedIcon fontSize={'small'} />
                  <h5>5</h5>
                </div>
              </div>

              <h2>{currentRoom?.objectName || '-'}</h2>

              <p>
                {currentRoom?.objectDescription.substring(
                  0,
                  showMoreDescription
                    ? currentRoom?.objectDescription?.length
                    : 300
                ) || '-'}
                <span
                  onClick={() => setShowMoreDescription(!showMoreDescription)}
                >
                  {' '}
                  {showMoreDescription ? t('showLess') : `...${t('showMore')}`}
                </span>
              </p>

              <div className={styles.amenitiesContainer}>
                {currentRoom?.amenities?.map((item, index) => (
                  <AmenitieDisplay key={index} amenitie={item as any} />
                ))}
              </div>
            </div>

            <div className={styles.ctaBoxHolder}>
              <div className={styles.ctaBox}>
                <OffersAccordion />
                <motion.button
                  id={'button'}
                  initial={{ scale: 0.9 }}
                  animate={{ scale: 1 }}
                  transition={{ duration: 0.1 }}
                  whileTap={{ scale: 0.9 }}
                  className={styles.confirmBtn}
                  onClick={() => {
                    router.push('/checkout');
                  }}
                >
                  Reservar
                </motion.button>
              </div>
            </div>
          </div>

          <section className={styles.servicesContainer}>
            <h4 className={styles.customSubtitle}>Confira</h4>
            <h2 className={styles.customTitle}>Serviços disponíveis</h2>
            <div className={styles.gridHolder}>
              {props?.servicesResult?.map((service, index) => (
                <CardService key={index} service={service} />
              ))}
            </div>
          </section>
        </div>
      </main>
      {size.width < 868 && openOffersModal && (
        <OffersRoomModal
          handleOpenMobileOffersModal={handleOpenMobileOffersModal}
        />
      )}
      <div className={styles.offersControlContainer}>
        <div className={styles.leftSide}>
          <h4>
            R$ 98 <span>2 noites</span>{' '}
          </h4>
          <u onClick={() => handleOpenMobileOffersModal()}>
            <h6>Ver 2 ofertas</h6>
          </u>
        </div>

        <div className={styles.rightSide}>
          <button onClick={() => router.push('/checkout')}> Reservar</button>
        </div>
      </div>
      <div className={styles.footerArea}>
        <div>
          <Footer design={props.design} officeDetails={props.officeDetails} />
        </div>
      </div>
    </>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
  // pegar os quartos mais vistos e colocar nos paths

  const ids = ['13', '14', '15', '16', '17']; // Example
  const paths = ids.map((id) => ({
    params: { id },
  }));
  return { paths, fallback: true };
};

export const getStaticProps: GetStaticProps = async ({ locale }) => {
  const base_url = 'http://book.hospeda.in';
  const officeDetails = await fetch(base_url + '/offices/office1').then(
    (response) => response.json()
  );
  const design = await fetch(base_url + '/offices/office1/design').then(
    (response) => response.json()
  );
  const reviews = await fetch(base_url + '/offices/office1/reviews').then(
    (response) => response.json()
  );

  const servicesResult = await fetch(
    base_url +
      '/booking/services/?' +
      new URLSearchParams({
        officeId: 'office1',
      })
  ).then((response) => response.json());

  const events = await fetch(
    base_url +
      '/offices/office1/events/?' +
      new URLSearchParams({
        startDate: moment().format('YYYY-MM-DD'),
        endDate: moment().add(2, 'M').format('YYYY-MM-DD'),
      })
  ).then((response) => response.json());
  const images = await fetch(base_url + '/offices/office1/images').then(
    (response) => response.json()
  );

  return {
    props: {
      searchResult: mockSearchResults[0],
      servicesResult,
      officeDetails,
      design,
      reviews,
      events,
      images,
      ...(await serverSideTranslations(locale, ['common'])),
    },
    revalidate: 60,
  };
};

const imageData = [
  {
    url: 'https://images.unsplash.com/photo-1604156788856-2ce5f2171cce?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',
    title: 'balões',
    alt: 'balões',
  },
  {
    url: 'https://images.unsplash.com/photo-1559686043-aef1bbc98d19?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',
    title: 'balões',
    alt: 'balões',
  },
  {
    url: 'https://images.unsplash.com/photo-1514923995763-768e52f5af87?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80',
    title: 'balões',
    alt: 'balões',
  },
];

export default RoomDetails;
